#!/bin/sh

if [ -f state/PKGNAME ]; then
    curpkg=$(cat state/PKGNAME);
fi;

case $1 in
    get|geti)
	upper=$(echo $2 | tr [a-z] [A-Z]);
	if [ -f state/${upper} ]; then
	    cat state/${upper};
	elif [ "$1" = geti ]; then
	    echo "No value for ${upper}";
	fi;
	exit;
	;;
    set)
	upper=$(echo $2 | tr [a-z] [A-Z]);
	echo $3 > state/${upper};
	exit;
	;;
    start|source)
	if [ -n "$2" ]; then
	    ./setsource $2;
	    exit;
	else
	    echo "Usage: pkg start *pkgname*";
	    exit;
	fi;
	;;
    setup)
	if [ $# -eq 1 ]; then
	    for src in sources/*; do
		name=$(basename ${src});
		if [ "${name%~}" != "${name}" ]; then ./setsource ${name}; fi;
	    done;
	else
	    for src in $@; do
		if [ -f "sources/${src}" ]; then
		    ./setsource ${src};
		else echo "Not a known package: ${src}";
		fi;
	    done;
	fi;
	exit;
	;;
    update)
	if [ $# -eq 1 ]; then
	    for src in sources/*; do
		name=$(basename ${src});
		if [ "${name%~}" != "${name}" ]; then ./setsource ${name}; fi;
	    done;
	else
	    for src in $@; do
		if [ -f "sources/${src}" ]; then
		    ./setsource ${src};
		else echo "Not a known package: ${src}";
		fi;
	    done;
	fi;	
	exit;
	;;
    cleanup)
	if [ $# -eq 1 ]; then
	    for src in sources/*; do
		name=$(basename ${src});
		if [ "${name%~}" = "${name}" ]; then
		    files=$(ls ${name}*.tar ${name}*.tar.gz 2>/dev/null);
		    if [ -n "${files}" ]; then 
			echo "Removing ${files}"; 
			rm ${files};
		    fi;
		fi;
	    done;
	else
	    for name in $@; do
		if [ -f "sources/${name}" ]; then
		    files=$(ls ${name}*.tar ${name}*.tar.gz 2>/dev/null);
		    if [ -n "${files}" ]; then 
			echo "Removing ${files}"; 
			rm ${files};
		    fi;
		else echo "Not a known package: ${name}";
		fi;
	    done;
	fi;	
	exit;
	;;
    *=*)
	varname=${1%=*};
	valstring=${1#*=};
	varname=$(echo ${varname} | tr [a-z] [A-Z]);
	echo "Setting state ${varname} to$ '{valstring}'";
	echo ${valstring} > state/${varname};
	exit;
	;;
    *)
	upper=$(echo $1 | tr [a-z] [A-Z]);
	if [ -f state/${upper} ]; then
	    cat state/${upper};
	    exit;
	fi;
	;;
esac;

if [ -f "sources/$1" ]; then
    if [ -z "${PACKAGING_ROOT}" ]; then
	. ./packaging.sh;
    elif [ "${curpkg}" != "$1" ]; then
	. ./packaging.sh;
    fi;
else
    ACTION=$1; shift;
    . ./packaging.sh;
fi;

if [ "${PKGNAME}" != "${curpkg}" ]; then
    ./setsource ${PKGNAME};
fi;

export SUCCESS;

pkg_done() {
    if  [ -z "${SUCCESS}" ]; then
	echo "Failed '${ACTION}' for ${PKGNAME}";
    else
	echo "Success with '${ACTION}' for ${PKGNAME}";
    fi;
    exit;
}

if [ -z "${PKGTOOL}" ]; then
    case ${ACTION} in
	deb|debian|rpm|redhat)
	;;
	*)
	    echo "Couldn't determine package tool!";
	    exit;
	    ;;
    esac;
fi;

case ${ACTION} in
    deb|debian)
	debtool ${curpkg} $@ && SUCCESS=yes;
	pkg_done;
	;;
    rpm|redhat)
	rpmtool ${curpkg} $@ && SUCCESS=yes;
	pkg_done;
	;;
    prep|prepare|pkg|package|install|push|make)
	${PKGTOOL} ${ACTION} $@  $@ && SUCCESS=yes;
	pkg_done;
	;;
    pkg|package)
	${PKGTOOL} ${ACTION} $@ && SUCCESS=yes;
	pkg_done;
	;;
    make)
	done=
	pkgtool prep && pkgtool package && SUCCESS=yes;
	pkg_done;
	;;
    make+)
	pkgtool prepd && pkgtool package && pkgtool install && SUCCESS=yes;
	pkg_done;
	;;
esac
   

#!/bin/sh

logmsg () {
    echo "pkg: $1" >&2;
}

. ./packaging.sh

for opt in $@; do
    case ${opt} in
	channel=*)
	    CHANNEL=${opt#channel=};
	    echo ${CHANNEL} > ${STATE_ROOT}/CHANNEL;
	    ;;
	CHANNEL=*)
	    CHANNEL=${opt#CHANNEL=};
	    echo ${CHANNEL} > ${STATE_ROOT}/CHANNEL;
	    ;;
	branch=*)
	    BRANCH=${opt#branch=}
	    echo ${BRANCH} > ${STATE_ROOT}/BRANCH;
	    ;;
	BRANCH=*)
	    BRANCH=${opt#BRANCH=}
	    echo ${BRANCH} > ${STATE_ROOT}/BRANCH;
	    ;;
	nosource|NOSOURCE)
	    echo ${opt} > ${STATE_ROOT}/NOSOURCE;
	    ;;
	*)
	    echo "Unhandled option ${opt}" >&2;
	    ;;
    esac;
done;

tarfile=${PKGNAME}.tar
srcurl=$(cat sources/${PKGNAME})
srcdir=src/${PKGNAME}
if [ ! -d "${srcdir}" ]; then
    git clone $(cat sources/${PKGNAME}) ${srcdir};
    ("cd" ${srcdir};
     if [ -n "${BRANCH}" ]; then git checkout ${BRANCH}; fi;
     git submodule init;
     git submodule update;
     if [ -z "${GIT_NO_LFS}" ]; then git lfs install; git lfs checkout; fi;);
else ("cd" ${srcdir};
      if [ -n "${BRANCH}" ]; then git checkout ${BRANCH}; fi;
      git pull;
      git submodule init; 
     git submodule update;
      if [ -z "${GIT_NO_LFS}" ]; then
	  git lfs fetch;
	  git lfs pull;
      fi;);
fi

if [ -z "${KNO_MAJOR}" ]; then KNO_MAJOR=$(knoconfig major); fi;
if [ -z "${KNO_MINOR}" ]; then KNO_MINOR=$(knoconfig minor); fi;
if [ -d ${srcdir}/.git ]; then
    BRANCH=$("cd" ${srcdir}; u8_gitbranch);
    echo ${BRANCH} > ${STATE_ROOT}/BRANCH;
fi;
if [ -f ${srcdir}/etc/base_version ]; then
    (cd "${srcdir}";
     echo $(u8_gitversion etc/base_version) > ${STATE_ROOT}/VERSION;
     echo $(u8_gitversion etc/base_version -full) > ${STATE_ROOT}/FULL_VERSION;
     cp etc/base_version ${STATE_ROOT}/BASE_VERSION);
elif [ -f ${srcdir}/etc/knomod_version ]; then
    ("cd" ${srcdir}; 
     MOD_VERSION=$(u8_gitversion etc/knomod_version);
     echo ${KNO_MAJOR}.${KNO_MINOR}.${MOD_VERSION} > ${STATE_ROOT}/VERSION;
     echo $(u8_gitversion etc/knomod_version -full) > ${STATE_ROOT}/FULL_VERSION;
     cp etc/knomod_version ${STATE_ROOT}/BASE_VERSION);
fi;

if [ -f ${srcdir}/dist/libname ]; then
    LIBNAME=$(cat ${srcdir}/dist/libname);
    echo ${LIBNAME} > ${STATE_ROOT}/LIBNAME;
elif [ "${pkgname#kno-}" != "${pkgname}" ]; then
    LIBNAME=${pkgname#kno-};
    echo ${LIBNAME} > ${STATE_ROOT}/LIBNAME;
fi;

import_state;

logmsg "Creating source tarball ${tarfile} with version info";

if [ -x ${srcdir}/make_source_tar ]; then
    ("cd" ${srcdir}; ./make_source_tar ../../${tarfile});
else 
    ("cd" ${srcdir}; git archive -o ../../${tarfile} HEAD );
    ("cd" state; tar -rf ../${tarfile} \
        VERSION BASE_VERSION FULL_VERSION VERSION);
fi;

echo "Package ${PKGNAME}(${BRANCH}) version ${VERSION}"

